// Mocks generated by Mockito 5.4.6 from annotations
// in flowery_app/test/domain/use_cases/login/login_with_email_and_password_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flowery_app/api/client/api_result.dart' as _i4;
import 'package:flowery_app/api/requests/login_request/login_request.dart'
    as _i6;
import 'package:flowery_app/domain/entities/user_data/user_data_entity.dart'
    as _i5;
import 'package:flowery_app/domain/repositories/login/login_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LoginRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRepository extends _i1.Mock implements _i2.LoginRepository {
  MockLoginRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<_i5.UserDataEntity?>> login({
    required _i6.LoginRequest? request,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#login, [], {#request: request}),
            returnValue: _i3.Future<_i4.Result<_i5.UserDataEntity?>>.value(
              _i7.dummyValue<_i4.Result<_i5.UserDataEntity?>>(
                this,
                Invocation.method(#login, [], {#request: request}),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.UserDataEntity?>>);
}
