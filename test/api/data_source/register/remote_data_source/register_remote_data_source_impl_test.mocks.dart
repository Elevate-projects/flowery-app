// Mocks generated by Mockito 5.4.6 from annotations
// in flowery_app/test/api/data_source/register/remote_data_source/register_remote_data_source_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:connectivity_plus/connectivity_plus.dart' as _i11;
import 'package:connectivity_plus_platform_interface/connectivity_plus_platform_interface.dart'
    as _i12;
import 'package:flowery_app/api/client/api_client.dart' as _i6;
import 'package:flowery_app/api/requests/login_request/login_request_model.dart'
    as _i8;
import 'package:flowery_app/api/requests/register_request/register_request.dart'
    as _i9;
import 'package:flowery_app/api/responses/login_response/login_response.dart'
    as _i2;
import 'package:flowery_app/api/responses/profile_response/profile_response.dart'
    as _i4;
import 'package:flowery_app/api/responses/register_response/register_response.dart'
    as _i3;
import 'package:flowery_app/core/secure_storage/secure_storage.dart' as _i10;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLoginResponse_0 extends _i1.SmartFake implements _i2.LoginResponse {
  _FakeLoginResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRegisterResponse_1 extends _i1.SmartFake
    implements _i3.RegisterResponse {
  _FakeRegisterResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProfileResponse_2 extends _i1.SmartFake
    implements _i4.ProfileResponse {
  _FakeProfileResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFlutterSecureStorage_3 extends _i1.SmartFake
    implements _i5.FlutterSecureStorage {
  _FakeFlutterSecureStorage_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiClient extends _i1.Mock implements _i6.ApiClient {
  MockApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.LoginResponse> login({
    required _i8.LoginRequestModel? request,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#login, [], {#request: request}),
            returnValue: _i7.Future<_i2.LoginResponse>.value(
              _FakeLoginResponse_0(
                this,
                Invocation.method(#login, [], {#request: request}),
              ),
            ),
          )
          as _i7.Future<_i2.LoginResponse>);

  @override
  _i7.Future<_i3.RegisterResponse> register({
    required _i9.RegisterRequest? request,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#register, [], {#request: request}),
            returnValue: _i7.Future<_i3.RegisterResponse>.value(
              _FakeRegisterResponse_1(
                this,
                Invocation.method(#register, [], {#request: request}),
              ),
            ),
          )
          as _i7.Future<_i3.RegisterResponse>);

  @override
  _i7.Future<_i4.ProfileResponse> getUserData({required String? token}) =>
      (super.noSuchMethod(
            Invocation.method(#getUserData, [], {#token: token}),
            returnValue: _i7.Future<_i4.ProfileResponse>.value(
              _FakeProfileResponse_2(
                this,
                Invocation.method(#getUserData, [], {#token: token}),
              ),
            ),
          )
          as _i7.Future<_i4.ProfileResponse>);
}

/// A class which mocks [SecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorage extends _i1.Mock implements _i10.SecureStorage {
  MockSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.FlutterSecureStorage get storage =>
      (super.noSuchMethod(
            Invocation.getter(#storage),
            returnValue: _FakeFlutterSecureStorage_3(
              this,
              Invocation.getter(#storage),
            ),
          )
          as _i5.FlutterSecureStorage);

  @override
  _i7.Future<void> saveData({required String? key, required String? value}) =>
      (super.noSuchMethod(
            Invocation.method(#saveData, [], {#key: key, #value: value}),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> saveUserToken({required String? token}) =>
      (super.noSuchMethod(
            Invocation.method(#saveUserToken, [], {#token: token}),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<String?> getData({required String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#getData, [], {#key: key}),
            returnValue: _i7.Future<String?>.value(),
          )
          as _i7.Future<String?>);

  @override
  _i7.Future<void> deleteData({required String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#deleteData, [], {#key: key}),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i11.Connectivity {
  MockConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Stream<List<_i12.ConnectivityResult>> get onConnectivityChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onConnectivityChanged),
            returnValue: _i7.Stream<List<_i12.ConnectivityResult>>.empty(),
          )
          as _i7.Stream<List<_i12.ConnectivityResult>>);

  @override
  _i7.Future<List<_i12.ConnectivityResult>> checkConnectivity() =>
      (super.noSuchMethod(
            Invocation.method(#checkConnectivity, []),
            returnValue: _i7.Future<List<_i12.ConnectivityResult>>.value(
              <_i12.ConnectivityResult>[],
            ),
          )
          as _i7.Future<List<_i12.ConnectivityResult>>);
}
